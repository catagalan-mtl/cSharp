// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TradingAppC.data;

#nullable disable

namespace TradingAppC.Migrations
{
    [DbContext(typeof(TradingAppCDbContext))]
    [Migration("20250422232535_DbInitQuoteEntity")]
    partial class DbInitQuoteEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TradingAppC.model.Quote", b =>
                {
                    b.Property<string>("Ticker")
                        .HasColumnType("text");

                    b.Property<float>("AskPrice")
                        .HasColumnType("real");

                    b.Property<int>("AskSize")
                        .HasColumnType("integer");

                    b.Property<float>("BidPrice")
                        .HasColumnType("real");

                    b.Property<int>("BidSize")
                        .HasColumnType("integer");

                    b.Property<float>("LastPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Ticker");

                    b.ToTable("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
